{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","messageBody","messageContent","sender","name","messageText","messageTime","time","messageData","HW1","SuperButton","red","restProps","finalClassName","btn","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","key","allClassName","activeFilter","active","highClassName","middleClassName","lowClassName","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","superInputParent","e","currentTarget","value","placeholder","Greeting","setNameCallback","addUser","totalUsers","keyPress","inputClass","isButtonDisabled","greeting","disabled","GreetingContainer","users","addUserCallback","setName","setError","trimName","trim","alert","greetUser","length","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ad82bcde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__10Bbo\",\"red\":\"SuperButton_red__3BtkQ\",\"active\":\"SuperButton_active__1IChy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3PXFW\",\"messageBody\":\"Message_messageBody__23Jq5\",\"messageContent\":\"Message_messageContent__3ZUTj\",\"sender\":\"Message_sender__312Ox\",\"messageText\":\"Message_messageText__CHA66\",\"messageTime\":\"Message_messageTime__1hzD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputParent\":\"SuperInputText_superInputParent__1c_71\",\"superInput\":\"SuperInputText_superInput__3DxyW\",\"errorInput\":\"SuperInputText_errorInput__aIAsB\",\"error\":\"SuperInputText_error__I8iDh\",\"show\":\"SuperInputText_show__ypLHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3Wj_h\",\"error\":\"Greeting_error__3SLeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3w-AG\",\"column\":\"HW4_column__VIrKl\",\"testSpanError\":\"HW4_testSpanError__2yNS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__hI-xk\",\"spanClassName\":\"SuperCheckbox_spanClassName__3o42l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1ipfF\"};","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props:MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n            <div className={s.messageBody}>\r\n                <div className={s.messageContent}>\r\n                    <div className={s.sender}>{props.name}</div>\r\n                    <div className={s.messageText}>{props.message}</div>\r\n                    <div className={s.messageTime}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : ''} ${className? className : ''} ${s.btn}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: any // need to fix any\r\n    deleteAffairCallback: any // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\r\n\r\n    return (\r\n        <div>\r\n            // show some text\r\n\r\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from '../h4/common/c2-SuperButton/SuperButton.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    activeFilter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // need to fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    const allClassName = props.activeFilter === 'all' ? s.active : ''\r\n    const highClassName = props.activeFilter === 'high' ? s.active : ''\r\n    const middleClassName = props.activeFilter === 'middle' ? s.active : ''\r\n    const lowClassName = props.activeFilter === 'low' ? s.active : ''\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton className={allClassName} onClick={setAll}>All</SuperButton>\r\n            <SuperButton className={highClassName} onClick={setHigh}>High</SuperButton>\r\n            <SuperButton className={middleClassName} onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton className={lowClassName} onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs:Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                activeFilter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error? s.error : ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className:''} ${s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.superInputParent}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Enter here'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    keyPress: (e: React.KeyboardEvent) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, keyPress} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''// need to fix with (?:)\r\n    // const isButtonDisabled = !!inputClass || !name.trim()\r\n    const isButtonDisabled = !!inputClass || !name\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <SuperInputText value={name} error={error} onChange={setNameCallback} onKeyPress={keyPress} className={inputClass}/>\r\n            {/*<span>{error}</span>*/}\r\n            <div>\r\n                <SuperButton disabled={isButtonDisabled} onClick={addUser}>add</SuperButton>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>): void => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        if (error) setError('')\r\n    }\r\n\r\n    const greetUser = (trimName: string): void => alert(`Hi, ${trimName}`)\r\n\r\n    const addUser = () => {\r\n        const trimName = name.trim()\r\n        if (trimName) {\r\n            greetUser(trimName) // need to fix\r\n            addUserCallback(trimName)\r\n        } else {\r\n            setError(\"Name can't be empty (Spaces are not counted)\")\r\n        }\r\n        setName('')\r\n    }\r\n    const keyPress = (e: React.KeyboardEvent): void => {\r\n        if (e.key === 'Enter') addUser()\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            keyPress={keyPress}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string): void => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name}]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    Default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react home works:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}