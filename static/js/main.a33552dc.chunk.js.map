{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h5/pages/404girl.jpg","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","isHover","setIsHover","toggleHover","headerClassName","s","header","hovered","className","onMouseEnter","onMouseLeave","activeClassName","activeLink","to","dots","Message","props","message","src","avatar","alt","messageBody","messageContent","sender","name","messageText","messageTime","time","messageData","HW1","SuperButton","red","restProps","finalClassName","btn","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","key","allClassName","activeFilter","active","highClassName","middleClassName","lowClassName","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","superInputParent","e","currentTarget","value","placeholder","Greeting","setNameCallback","addUser","totalUsers","keyPress","inputClass","isButtonDisabled","greeting","disabled","GreetingContainer","users","addUserCallback","setName","setError","trimName","trim","alert","greetUser","length","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","require","height","width","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","m","i","select","SuperRadio","onChangeCallback","o","arr","HW7","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a33552dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__10Bbo\",\"red\":\"SuperButton_red__3BtkQ\",\"active\":\"SuperButton_active__1IChy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3QJJr\",\"hovered\":\"Header_hovered__5ftLw\",\"activeLink\":\"Header_activeLink__dXckW\",\"dots\":\"Header_dots__2l05S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3PXFW\",\"messageBody\":\"Message_messageBody__23Jq5\",\"messageContent\":\"Message_messageContent__3ZUTj\",\"sender\":\"Message_sender__312Ox\",\"messageText\":\"Message_messageText__CHA66\",\"messageTime\":\"Message_messageTime__1hzD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputParent\":\"SuperInputText_superInputParent__1c_71\",\"superInput\":\"SuperInputText_superInput__3DxyW\",\"errorInput\":\"SuperInputText_errorInput__aIAsB\",\"error\":\"SuperInputText_error__I8iDh\",\"show\":\"SuperInputText_show__ypLHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3Wj_h\",\"error\":\"Greeting_error__3SLeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3w-AG\",\"column\":\"HW4_column__VIrKl\",\"testSpanError\":\"HW4_testSpanError__2yNS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__hI-xk\",\"spanClassName\":\"SuperCheckbox_spanClassName__3o42l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1ipfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__-W12i\"};","module.exports = __webpack_public_path__ + \"static/media/404girl.f1cfc31b.jpg\";","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    const [isHover, setIsHover] = useState<boolean>(false)\r\n    const toggleHover = () => setIsHover(!isHover)\r\n    const headerClassName = `${s.header} ${isHover ? s.hovered : ''}`\r\n\r\n    return (\r\n        <div className={headerClassName} onMouseEnter={toggleHover} onMouseLeave={toggleHover}>\r\n            <NavLink activeClassName={s.activeLink} to={'pre-junior'}>PreJunior</NavLink>\r\n            <NavLink activeClassName={s.activeLink} to={'junior'}>Junior</NavLink>\r\n            <NavLink activeClassName={s.activeLink} to={'junior-plus'}>Junior++</NavLink>\r\n            <span className={s.dots}>&#8285;</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props:MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n            <div className={s.messageBody}>\r\n                <div className={s.messageContent}>\r\n                    <div className={s.sender}>{props.name}</div>\r\n                    <div className={s.messageText}>{props.message}</div>\r\n                    <div className={s.messageTime}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : ''} ${className? className : ''} ${s.btn}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: any // need to fix any\r\n    deleteAffairCallback: any // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\r\n\r\n    return (\r\n        <div>\r\n            // show some text\r\n\r\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from '../h4/common/c2-SuperButton/SuperButton.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    activeFilter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // need to fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    const allClassName = props.activeFilter === 'all' ? s.active : ''\r\n    const highClassName = props.activeFilter === 'high' ? s.active : ''\r\n    const middleClassName = props.activeFilter === 'middle' ? s.active : ''\r\n    const lowClassName = props.activeFilter === 'low' ? s.active : ''\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton className={allClassName} onClick={setAll}>All</SuperButton>\r\n            <SuperButton className={highClassName} onClick={setHigh}>High</SuperButton>\r\n            <SuperButton className={middleClassName} onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton className={lowClassName} onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs:Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                activeFilter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error? s.error : ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className:''} ${s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.superInputParent}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Enter here'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    keyPress: (e: React.KeyboardEvent) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, keyPress} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''// need to fix with (?:)\r\n    // const isButtonDisabled = !!inputClass || !name.trim()\r\n    const isButtonDisabled = !!inputClass || !name\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <SuperInputText value={name} error={error} onChange={setNameCallback} onKeyPress={keyPress} className={inputClass}/>\r\n            {/*<span>{error}</span>*/}\r\n            <div>\r\n                <SuperButton disabled={isButtonDisabled} onClick={addUser}>add</SuperButton>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>): void => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        if (error) setError('')\r\n    }\r\n\r\n    const greetUser = (trimName: string): void => alert(`Hi, ${trimName}`)\r\n\r\n    const addUser = () => {\r\n        const trimName = name.trim()\r\n        if (trimName) {\r\n            greetUser(trimName) // need to fix\r\n            addUserCallback(trimName)\r\n        } else {\r\n            setError(\"Name can't be empty (Spaces are not counted)\")\r\n        }\r\n        setName('')\r\n    }\r\n    const keyPress = (e: React.KeyboardEvent): void => {\r\n        if (e.key === 'Enter') addUser()\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            keyPress={keyPress}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string): void => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name}]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    Default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={'error404'}>\r\n            <img src={require(\"../pages/404girl.jpg\")} height={'400px'} width={'400px'} alt=\"\"/>\r\n            <div className={'content404'}>\r\n                <span>404</span>\r\n                <div>Page not found!</div>\r\n                <div>But don't worry, there is navigation panel with actual links on left top corner=)</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n    const onChangeText = (value:string) => restProps.onChangeText && restProps.onChangeText(value)\r\n\r\n    const spanClassName = `${'beautifulSpan'} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onChangeText={onChangeText}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState('editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options\r\n        ? options.map((m, i) => (\r\n            <option key={m + '-' + i} value={m}>\r\n                {m}\r\n            </option>\r\n        )) : [] // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption\r\n        && onChangeOption(e.currentTarget.value)// onChange, onChangeOption\r\n\r\n        onChange\r\n        && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption\r\n        && onChangeOption(e.currentTarget.value)\r\n\r\n        onChange\r\n        && onChange(e)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={o}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from '../../h7/HW7';\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior level\r\n            <HW6/>\r\n            <HW7/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            Junior+\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}